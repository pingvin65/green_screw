package com.pink.screw.java.controllers;


import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.FieldError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.pink.screw.java.entities.Product;
import com.pink.screw.java.repository.ProductRepository;

@Controller
@Validated 
@RequestMapping(path = "/api/v1")
public class MainController {

	@Autowired
	private ProductRepository productRepository;

	@PostMapping(path = "/add")
	public @ResponseBody String addNewProduct(@RequestParam String productCode, @RequestParam String name,
			@RequestParam Integer quantity, @RequestParam Float price) {


		String message = "Saved\n";

		Product product = new Product(productCode, name, quantity, price);

//		System.out.println(product);
		productRepository.save(product);

		return message;
	}
	
	@PostMapping(path = "/add3")
	public @ResponseBody  String add2NewProduct(@Valid  Product product) {


		String message = "Saved\n";

//		Product product = new Product(productCode, name, quantity, price);

//		System.out.println(product);
		productRepository.save(product);

		return message;
	}
	
	@PostMapping("/add2")
	ResponseEntity<String> addProduct(@Valid @RequestBody Product newProduct){
		try {
			productRepository.save(newProduct);	
		}catch(Exception e) {
			return ResponseEntity.ok("no saved");
		}
			
							
		return ResponseEntity.ok("Saved");		
	}
	
//	@ResponseStatus(HttpStatus.BAD_REQUEST)
//	@ExceptionHandler(MethodArgumentNotValidException.class)
//	public Map<String, String> handleValidationExceptions(
//	  MethodArgumentNotValidException ex) {
//	    Map<String, String> errors = new HashMap<>();
//	    ex.getBindingResult().getAllErrors().forEach((error) -> {
//	        String fieldName = ((FieldError) error).getField();
//	        String errorMessage = error.getDefaultMessage();
//	        errors.put(fieldName, errorMessage);
//	    });
//	    return errors;
//	}
//	@PostMapping("/add2")
//	@ResponseStatus(code = HttpStatus.CREATED)
//	Product newProduct(@Valid @RequestBody Product newProduct){
//		System.out.println("-----------------------------------------------");
//		System.out.println(newProduct.getName());
//		System.out.println("-----------------------------------------------");
//		return productRepository.save(newProduct);
//		
//	}
//	@PostMapping("/add2")
//	ResponseEntity<String> addProduct(@RequestParam String productCode, @Valid @RequestParam String name,
//			@RequestParam Integer quantity, @RequestParam Float price) {
//	
//		Product product = new Product(productCode, name, quantity, price);
//
//        // persisting the user
//        return ResponseEntity.ok("User is valid");
//    }

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<Product> getAllUsers() {
		// This returns a JSON or XML with the users
		return productRepository.findAll();
	}

}
